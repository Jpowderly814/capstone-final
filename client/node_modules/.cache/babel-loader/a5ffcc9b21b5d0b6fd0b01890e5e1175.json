{"ast":null,"code":"var _jsxFileName = \"/Users/powderlj/Desktop/Apprenticeship/capstone-final/client/src/components/Music/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport Player from \"./Player\"; //import TrackSearchResult from \"./TrackSearchResult\"\n\nimport PlaylistSearchResult from \"./PlaylistSearchResult\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\"; //import axios from \"axios\"\n\nimport TrackList from \"./TrackList\";\nimport RatePlaylist from \"./RatePlaylist\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\"\n});\nexport default function Dashboard({\n  code\n}) {\n  _s();\n\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingPlaylist, setPlayingPlaylist] = useState();\n  const [tracks, setTracks] = useState(\"\");\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  function choosePlaylist(playlist) {\n    const playlistCode = playlist.uri.substring(17);\n    spotifyApi.getPlaylistTracks(playlistCode).then(res => {\n      console.log(res.body);\n      setPlaylistTracks(res.body.items.map(track => {\n        const smallestAlbumImage = track.track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        } //track.images[0]\n        );\n        return {\n          title: track.track.name,\n          albumUrl: smallestAlbumImage.url,\n          id: track.track.id\n        };\n      })); //console.log(res.body.items[\"track\"].track.name);\n    }); //artist: track.artists[0].name,\n\n    setPlayingPlaylist(playlist);\n    setSearch(\"\");\n    setTracks(\"\");\n  }\n\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchPlaylists(search + \" bpm\").then(res => {\n      console.log(res.body);\n      if (cancel) return;\n      setSearchResults(res.body[\"playlists\"].items.map(playlist => {\n        const smallestAlbumImage = playlist.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, playlist.images[0]);\n        return {\n          //artist: track.artists[0].name,\n          title: playlist.name,\n          uri: playlist.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchPlaylists(search + \" bpm\").then(res => {\n      if (cancel) return;\n      setSearchResults(res.body[\"playlists\"].items.map(playlist => {\n        const smallestAlbumImage = playlist.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, playlist.images[0]);\n        return {\n          //artist: track.artists[0].name,\n          title: playlist.name,\n          uri: playlist.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n\n  const savePlaylist = () => {\n    console.log(localStorage.getItem(\"user\"));\n    console.log(playingPlaylist);\n    axios.post(\"http://localhost:3001/save\", {\n      playlist: playingPlaylist.uri.substring(17),\n      name: playingPlaylist.title,\n      user: localStorage.getItem(\"user\")\n    }).then(response => {\n      console.log(\"Success!\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: [searchResults.map(playlist => /*#__PURE__*/_jsxDEV(PlaylistSearchResult, {\n        playlist: playlist,\n        choosePlaylist: choosePlaylist\n      }, playlist.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          whiteSpace: \"pre\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", playingPlaylist && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: savePlaylist,\n            children: \"Save Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", playingPlaylist && /*#__PURE__*/_jsxDEV(RatePlaylist, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 39\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: playingPlaylist && /*#__PURE__*/_jsxDEV(TrackList, {\n            trackList: playlistTracks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingPlaylist === null || playingPlaylist === void 0 ? void 0 : playingPlaylist.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"tmUEjTEDIdd2Lz5B+6Q2tdCnU80=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/powderlj/Desktop/Apprenticeship/capstone-final/client/src/components/Music/Dashboard.js"],"names":["useState","useEffect","useAuth","Player","PlaylistSearchResult","Container","Form","SpotifyWebApi","TrackList","RatePlaylist","axios","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","playingPlaylist","setPlayingPlaylist","tracks","setTracks","playlistTracks","setPlaylistTracks","choosePlaylist","playlist","playlistCode","uri","substring","getPlaylistTracks","then","res","console","log","body","items","map","track","smallestAlbumImage","album","images","reduce","smallest","image","height","title","name","albumUrl","url","id","cancel","searchPlaylists","setAccessToken","savePlaylist","localStorage","getItem","post","user","response","e","target","value","overflowY","length","whiteSpace"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport useAuth from \"./useAuth\"\nimport Player from \"./Player\"\n//import TrackSearchResult from \"./TrackSearchResult\"\nimport PlaylistSearchResult from \"./PlaylistSearchResult\";\nimport { Container, Form } from \"react-bootstrap\"\nimport SpotifyWebApi from \"spotify-web-api-node\"\n//import axios from \"axios\"\nimport TrackList from \"./TrackList\";\nimport RatePlaylist from \"./RatePlaylist\";\nimport axios from \"axios\";\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\",\n})\n\nexport default function Dashboard({ code }) {\n  const accessToken = useAuth(code)\n  const [search, setSearch] = useState(\"\")\n  const [searchResults, setSearchResults] = useState([])\n  const [playingPlaylist, setPlayingPlaylist] = useState()\n  const [tracks, setTracks] = useState(\"\")\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  \n  function choosePlaylist(playlist) {\n    const playlistCode=playlist.uri.substring(17);\n    spotifyApi.getPlaylistTracks(playlistCode)\n      .then(res => {\n        console.log(res.body);\n        setPlaylistTracks(res.body.items.map(track => {\n\n          const smallestAlbumImage = track.track.album.images.reduce(\n            (smallest, image) => {\n              if (image.height < smallest.height) return image\n              return smallest\n            },\n            //track.images[0]\n          )\n\n          return {\n            title: track.track.name,\n            albumUrl: smallestAlbumImage.url,\n            id: track.track.id\n          }\n        }));\n\n        //console.log(res.body.items[\"track\"].track.name);\n      });\n        //artist: track.artists[0].name,\n        \n    setPlayingPlaylist(playlist);\n    setSearch(\"\");\n    setTracks(\"\");\n  }\n\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n\n    let cancel = false;\n    spotifyApi.searchPlaylists(search + \" bpm\").then(res => {\n      console.log(res.body);\n      if (cancel) return\n      setSearchResults(\n        \n        res.body[\"playlists\"].items.map(playlist => {\n          const smallestAlbumImage = playlist.images.reduce(\n            (smallest, image) => {\n              if (image.height < smallest.height) return image\n              return smallest\n            },\n            playlist.images[0]\n          )\n\n          return {\n            //artist: track.artists[0].name,\n            title: playlist.name,\n            uri: playlist.uri,\n            albumUrl: smallestAlbumImage.url,\n          }\n        })\n      )\n    })\n\n    return () => (cancel = true)\n  }, [search, accessToken])\n  \n\n\n  useEffect(() => {\n    if (!accessToken) return\n    spotifyApi.setAccessToken(accessToken)\n  }, [accessToken])\n\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n\n    let cancel = false;\n    spotifyApi.searchPlaylists(search + \" bpm\").then(res => {\n      \n      if (cancel) return\n      setSearchResults(\n        res.body[\"playlists\"].items.map(playlist => {\n          const smallestAlbumImage = playlist.images.reduce(\n            (smallest, image) => {\n              if (image.height < smallest.height) return image\n              return smallest\n            },\n            playlist.images[0]\n          )\n\n          return {\n            //artist: track.artists[0].name,\n            title: playlist.name,\n            uri: playlist.uri,\n            albumUrl: smallestAlbumImage.url,\n          }\n        })\n      )\n    })\n\n    return () => (cancel = true)\n  }, [search, accessToken])\n\n  \n  const savePlaylist = () => {\n    console.log(localStorage.getItem(\"user\"));\n    \n    \n    console.log(playingPlaylist);\n      axios.post(\"http://localhost:3001/save\", {\n        playlist: playingPlaylist.uri.substring(17),\n        name: playingPlaylist.title,\n        user: localStorage.getItem(\"user\")\n      }).then((response) => {\n        console.log(\"Success!\");  \n        });\n\n  };\n\n\n  return (\n\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\n      <Form.Control\n        type=\"search\"\n        placeholder=\"Search Songs/Artists\"\n        value={search} \n        onChange={e => setSearch(e.target.value)}\n      />\n\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n        {searchResults.map(playlist => (\n          <PlaylistSearchResult\n            playlist={playlist}\n            key={playlist.uri}\n            choosePlaylist={choosePlaylist}\n          />\n        ))}\n        {searchResults.length === 0 && (\n          <div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n            <div> {playingPlaylist && <button onClick={savePlaylist}>Save Playlist</button>}</div>\n            <div> {playingPlaylist && <RatePlaylist/>} </div>\n            <div>{playingPlaylist && <TrackList trackList={playlistTracks}  />}</div>\n          </div>\n          )}\n      </div>\n      <div>\n        <Player accessToken={accessToken} trackUri={playingPlaylist?.uri} />\n      </div>\n    </Container>\n\n  )\n}\n"]},"metadata":{},"sourceType":"module"}